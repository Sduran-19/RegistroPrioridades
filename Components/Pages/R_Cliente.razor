@page "/cliente"
@rendermode InteractiveServer
@inject ClienteService ClienteService
@inject HttpClient httpClient


<EditForm Model="cliente" OnValidSubmit="Crear">
    <DataAnnotationsValidator />

    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header">
                <h3>Registro de Cliente.</h3>
            </div>
            <div class=card-body>

                @*ClienteId:*@
                <div class="col-xs-12 col-sm-12 col-md-8 col-lg-6 col-xl-4">
                    <label>Cliente Id:</label>
                    <div class="input-group mb-3">
                        <InputNumber @bind-Value="cliente.ClienteId" class="form-control"/>
                    </div>
                </div>

                @*Nombres*@
                <div class="mb-3">
                    <label class="form-label" for="Nombre">Nombre:</label>
                    <InputText @bind-Value="cliente.Nombre" class="form-control" />
                    <ValidationMessage For="@(() => cliente.Nombre)" />
                </div>

                @*Telefono*@
                <div class="mb-3">
                    <label class="form-label" for="Telefono">Telefono:</label>
                    <InputText @bind-Value=cliente.Telefono class="form-control" />
                    <ValidationMessage For="@(() => cliente.Telefono)" />
                </div

                 @*Celular*@
                <div class="mb-3">
                    <label class="form-label" for="Celular">Celular:</label>
                    <InputText @bind-Value=cliente.Celular class="form-control" />
                    <ValidationMessage For="@(() => cliente.Celular)" />
                </div>

                  @*RNC*@
                <div class="mb-3">
                    <label class="form-label" for="Rnc">Rnc:</label>
                    <InputNumber @bind-Value=cliente.Rnc class="form-control" />
                    <ValidationMessage For="@(() => cliente.Rnc)" />
                </div>

                 @*Direccion*@
                <div class="mb-3">
                    <label class="form-label" for="Direccion">Direccion:</label>
                    <InputText @bind-Value="cliente.Direccion" class="form-control" />
                    <ValidationMessage For="@(() => cliente.Direccion)" />
                </div>

            </div>
             <div class="card-footer d-flex justify-content-between">
                <div class="btn-group">
                    <button type="submit" class="btn btn-outline-success">Crear <i class="oi oi-document" /></button>
                </div>
                <div class="ms-auto"></div>
            </div>
        </div>
    </div>


</EditForm>


@code {

    [Parameter]
    public int ClienteId { get; set; }
    public Cliente cliente { get; set; } = new Cliente();
    public string Mensaje { get; set; } = string.Empty;



   
    protected override async Task OnInitializedAsync()
    {
        if (ClienteId > 0)
        {
            this.cliente.ClienteId = ClienteId;
            await Crear();
        }

    }

    public async Task Crear()
    {
        using var response = await httpClient.PostAsJsonAsync("api/Prioridad", cliente);
        if (!response.IsSuccessStatusCode)
        {
            Mensaje = response.ReasonPhrase ?? "error";
            return;
        }
        var clienteDevuelto = await response.Content.ReadFromJsonAsync<Cliente>();
        if (clienteDevuelto is not null)
        {
            cliente = clienteDevuelto;
            StateHasChanged();
        }

    }
}
