@page "/Prioridades"
@rendermode InteractiveServer
@inject HttpClient httpClient
@inject PrioridadesService PrioridadesService

<EditForm Model="prioridades" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header">
                <h3>Registro de Prioridades.</h3>  
            </div>
            <div class=card-body>

                @*Prioridades Id:*@
                <div class="col-xs-12 col-sm-12 col-md-8 col-lg-6 col-xl-4">
                    <label>Prioridad Id:</label>
                    <div class="input-group mb-3">
                        <InputNumber @bind-Value="prioridades.PrioridadId" class="form-control" />
                    </div>
                </div>

                @*Descripcion*@
                <div class="mb-3">
                    <label class="form-label" for="Descripcion">Descripcion:</label>
                    <InputText @bind-Value="prioridades.Descripcion" class="form-control" />
                    <ValidationMessage For="@(() => prioridades.Descripcion)" />
                </div>


              
                @*Dias de Compromiso*@
                <div class="mb-3">
                    <label class="form-label" for="Dias de Compromiso">Dias de Compromiso:</label>
                    <InputNumber @bind-Value="prioridades.DiasCompromiso" class="form-control" />
                    <ValidationMessage For="@(() => prioridades.DiasCompromiso)" />
                </div>


            </div>
            <div class="card-footer d-flex justify-content-center">
                <div class="btn-group">
                    <button type="button" class="btn btn-outline-primary" @onclick="Nuevo">Nuevo <i class="oi oi-file" /></button>
                    <button type="submit" class="btn btn-outline-success">Guardar <i class="oi oi-document" /></button>
                    <button type="button" class="btn btn-outline-danger" @onclick="Eliminar">Eliminar <i class="oi oi-trash" /></button>
                </div>
            </div>
        </div>
    </div>


</EditForm>



@code {

    [Parameter]
   

    public Prioridades prioridades { get; set; } = new Prioridades();

    public string Mensaje { get; set; } = string.Empty;



    public async void Buscar()
    {
        var Encontrado = await PrioridadesService.Buscar(prioridades.PrioridadId);
        if (Encontrado != null)
        {
            prioridades = Encontrado;
            Mensaje = string.Empty;
        }

    }

    public void Nuevo()
    {
        this.prioridades = new Prioridades();
    }

    public void Ocultar()
    {
        Mensaje = string.Empty;
    }

    public async void Guardar()
    {
        var guardo = PrioridadesService.Guardar(prioridades);
        if (await guardo)
        {

            Nuevo();
        }

    }

    public async void Eliminar()
    {
        var elimino = PrioridadesService.Eliminar(prioridades);
        if (await elimino)
        {

            Nuevo();
        }

    }
}
